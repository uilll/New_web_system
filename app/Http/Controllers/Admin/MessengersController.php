<?php namespace App\Http\Controllers\Admin;

use Facades\Repositories\UserRepo;
use Facades\Repositories\DeviceRepo;
use Facades\Repositories\EventRepo;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\Input;
//use Illuminate\Support\Facades\Request;
use Illuminate\Support\Facades\Response;
use Illuminate\Support\Facades\View;
use Illuminate\Support\Facades\Redirect;
use Tobuli\Exceptions\ValidationException;
use Tobuli\Repositories\User\UserRepositoryInterface as User;
use Tobuli\Validation\ClientFormValidator;
use Tobuli\Repositories\Device\DeviceRepositoryInterface as Device;
use Tobuli\Repositories\TraccarDevice\TraccarDeviceRepositoryInterface as TraccarDevice;
use Tobuli\Repositories\Event\EventRepositoryInterface as Event;

use Carbon\Carbon;
use Illuminate\Support\Str;



class MessengersController extends BaseController {
    /**
     * @var ClientFormValidator
     */
    private $clientFormValidator;

    private $section = 'Messengers';
    /**
     * @var Device
     */
    private $device;
    /**
     * @var TraccarDevice
     */
    private $traccarDevice;
    /**
     * @var Event
     */
    private $event;

    function __construct(ClientFormValidator $clientFormValidator, Device $device, TraccarDevice $traccarDevice, Event $event)
    {
        /*parent::__construct();
        $this->clientFormValidator = $clientFormValidator;
        $this->device = $device;
        $this->traccarDevice = $traccarDevice;
        $this->event = $event;*/
    }

    public function index($id = null, $title = null, $body = null) {
        
        dd('olÃ¡'); 
        /*if(false)//Auth::User()->id == 6){
            $users = DB::table('users')->where('active', 1)->where("group_id", 2)->get();
            foreach ($users as $user){
                $devices = UserRepo::getDevicesWith($user->id, ['devices', 'devices.sensors']);
                if($devices->count()>0){
                    
                    foreach($devices as $device){
                        
                        if ($device->protocol == "gt06"){
                            $alert_name1="Violacao de bateria 1";
                            $pivot = 8;
                        }
                        elseif ($device->protocol == "suntech"){
                            $alert_name1="Violacao de bateria 2";
                            $pivot = 7;
                        }
                        elseif ($device->protocol == "mxt"){
                            $alert_name1="Violacao de bateria 3";
                            $pivot = 21;
                        }
                        elseif ($device->protocol == "easytrack"){
                            $alert_name1="Violacao de bateria 4";
                            $pivot = 29;
                        }
                        else{
                            $alert_name1="Violacao de bateria 5";
                            $pivot = 20;
                        }
                        
                        $alert = DB::table('alerts')->where(['name' => $alert_name1, 'user_id' => $user->id])->get();
                            if(!$alert){
                                DB::table('alerts')->insert(['user_id' => $user->id, 
                                                'active' => true, 
                                                'name' => $alert_name1, 
                                                'type' => 'custom', 
                                                'schedules' => '{"monday":["03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45","00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45"],"tuesday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"wednesday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"thursday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"friday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"saturday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"sunday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"]}',  
                                                'notifications' => '{"sound":{"active":"1"},"push":{"active":"1"},"email":{"input":""},"webhook":{"input":""}}',
                                                'data' => '{"command":{"active":"0","type":"engineResume"},"schedule":"1"}']);
                                $alert = DB::table('alerts')->where(['name' => $alert_name1, 'user_id' => $user->id])->get();
                            }
                        foreach ($alert as $alert_){
                            $event_id1 = $alert_->id;
                        }
                        
                        $status = DB::table('alert_device')->where(['alert_id' => $event_id1, 'device_id' => $device->id])->get();
                        if(!$status){
                            DB::table('alert_device')->insert(['alert_id' => $event_id1, 'device_id' => $device->id]);
                            DB::table('alert_event_pivot')->insert(['alert_id' => $event_id1, 'event_id' => $pivot]);
                        }

                        
                        
                        $alert_name2="Sem ComunicaÃ§Ã£o";
                            $alert = DB::table('alerts')->where(['name' => $alert_name2, 'user_id' => $user->id])->get();
                            if(!$alert){
                                DB::table('alerts')->insert(['user_id' => $user->id, 
                                                'active' => true, 
                                                'name' => $alert_name2, 
                                                'type' => 'offline_duration', 
                                                'schedules' => '{"monday":["03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45","00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45"],"tuesday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"wednesday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"thursday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"friday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"saturday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"],"sunday":["00:00","00:15","00:30","00:45","01:00","01:15","01:30","01:45","02:00","02:15","02:30","02:45","03:00","03:15","03:30","03:45","04:00","04:15","04:30","04:45","05:00","05:15","05:30","05:45","06:00","06:15","06:30","06:45","07:00","07:15","07:30","07:45","08:00","08:15","08:30","08:45","09:00","09:15","09:30","09:45","10:00","10:15","10:30","10:45","11:00","11:15","11:30","11:45","12:00","12:15","12:30","12:45","13:00","13:15","13:30","13:45","14:00","14:15","14:30","14:45","15:00","15:15","15:30","15:45","16:00","16:15","16:30","16:45","17:00","17:15","17:30","17:45","18:00","18:15","18:30","18:45","19:00","19:15","19:30","19:45","20:00","20:15","20:30","20:45","21:00","21:15","21:30","21:45","22:00","22:15","22:30","22:45","23:00","23:15","23:30","23:45"]}',  
                                                'notifications' => '{"sound":{"active":"1"},"push":{"active":"1"},"email":{"input":""},"webhook":{"input":""}}',
                                                'data' => '{"offline_duration":"1440","schedule":"1","command":{"active":"0"}}']);
                                $alert = DB::table('alerts')->where(['name' => $alert_name2, 'user_id' => $user->id])->get();
                            }
                        //$alert = DB::table('alerts')->where(['name' => $alert_name2, 'user_id' => $user->id])->update(['data' => '{"offline_duration":"1440","schedule":"1","command":{"active":"0"}}']);
                        foreach ($alert as $alert_){
                            $event_id2 = $alert_->id;
                        }

                        $status = DB::table('alert_device')->where(['alert_id' => $event_id2, 'device_id' => $device->id])->get();
                        if(!$status){
                            DB::table('alert_device')->insert(['alert_id' => $event_id2, 'device_id' => $device->id]);
                        }
                            
                        $status = DB::table('alert_device')->where(['alert_id' => $event_id2, 'device_id' => $device->id])->get();
                        //dd($status);
                    }
                }
                    
            }
        }


        /*
        $input = Input::all();
        $users = NULL;
        if (Auth::User()->isManager()) {
            $users = Auth::User()->subusers()->lists('id', 'id')->all();
            $users[] = Auth::User()->id;
        }
        
        //Obter as ocorrÃªncias para apresentaÃ§Ã£o
        if ($search_item == ""){
            $items = Technician::orderby('id', 'asc')
                            ->get();
        }
        else{
           $items = Technician::orderby('id', 'asc')
                            ->where('name', 'like','%'.Str::lower($search_item).'%')
                            ->orWhere('city', 'like','%'.Str::lower($search_item).'%')
                            ->orWhere('address', 'like','%'.Str::lower($search_item).'%')
                            ->orWhere('obs', 'like','%'.Str::lower($search_item).'%')
                            ->get();
        }
        foreach ($items as $item){
            $item->services_performed = Insta_maint::where('technician_id',$item->id)->where('active',0)->count();
            $item->services_to_performace = Insta_maint::where('technician_id',$item->id)->where('active',1)->count();
            $item->paid_services = 0;
        }
        
        $technicians = $items->paginate(10,$page);
        $items = $this->device->searchAndPaginateAdmin($input, 'name', 'asc', 1, $users);
        
        $section = $this->section;
        //dd('teste');
        //$page = $services->currentPage();
        //$total_pages = $services->lastPage();
        //$pagination = smartPaginate($services->currentPage(), $total_pages);
        //dd($Monitorings->render());
        //dd($services);
        return View::make('admin::'.ucfirst($this->section).'.' . 'table')->with(compact('items','section','technicians'));*/
    }

    public function create() {
        
        //dd($date_now);
        
        //$services = insta_maint::all();        

        //return View::make('admin::'.ucfirst($this->section).'.create');
    }
    
    public function edit($id) {
        /*
        $item = technician::find($id);
        return View::make('admin::'.ucfirst($this->section).'.edit')->with(compact('item'));*/
    }
    
    public function store(Request $request)
    {   
    
    /*public function store(Request $request)  
    {    $validatedData = $request->validate([      'product_line_id' => 'required|integer',      'description' => 'required|alpha_num',      'expiration_time' => 'required|date',      'price' =>['required',     'regex:/^\d+([.,]\d{1,X})?$]/'] ]);    $data = [      'product_line_id' => request('product_line_id'),      'description' => request('description'),      'expiration_time' => request('expiration_time'),      'price' => request('price') ];    Product::create($data);    return back();  } */
        /*
            $item = new Technician([
                'active' => true,
                'name' => $request->input('name'),
                'contact' => $request->input('contact'),
                'address' => $request->input('address'),
                'city' => $request->input('city'),
                'obs' => $request->input('obs')
            ]);
            $item->save();
            return Response::json(['status' => 1]);
        */
    }
    
    
    public function update(Request $request)
    {   
        /*
        $item = Technician::find($request->input('id'));
        
        $item->active = true;
        $item->name = $request->input('name');
        $item->contact = $request->input('contact');
        $item->address = $request->input('address');
        $item->city = $request->input('city');
        $item->obs = $request->input('obs');
        
        //  $service-> = $request->input('');
        $item->save();
        
        return Response::json(['status' => 1]);*/
    }
    public function destroy(Request $request) {
        /*
        if (config('tobuli.object_delete_pass') && Auth::user()->isAdmin() && request('password') != config('tobuli.object_delete_pass')) {
            return ['status' => 0, 'errors' => ['message' => trans('front.login_failed')]];
        }

        $ids = $request->input('ids');

        if (is_array($ids) && count($ids)) {
            foreach($ids as $id) {
                $Monitoring = Monitoring::find($id); 
                $Monitoring->delete();

                /*catch (\Exception $e) {
                    rollbackTransaction();
                }* /
            }
        }

        return Response::json(['status' => 1]);*/
    }

    public function doDestroy(Request $request)
    {
        /*
        $ids = $request->input('ids');
        dd($ids);
        return view('admin::monitoring.destroy')->with(compact('ids'));*/
    }
    public function convert_date($date, $show_date){
        
        if ($show_date==true){
            $dayOfWeek = array('Domingo','Segunda','TerÃ§a','Quarta','Quinta','Sexta','SÃ¡bado');
            
            $modified_date = Carbon::createFromFormat('Y-m-d', $date,-3);
            $modified_date = $dayOfWeek[$modified_date->dayOfWeek].', '.$modified_date->day.'-'.$modified_date->month.'-'.$modified_date->year;
            //dd($modified_date);
            return $modified_date;
        }
        else{
            
        }
    }
}
